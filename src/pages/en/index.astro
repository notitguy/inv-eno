---
//astro-i18next
import i18next, { t, changeLanguage } from "i18next";
import { Trans, HeadHrefLangs, LanguageSelector } from "astro-i18next/components";

changeLanguage("en");
---

<html lang={i18next.language}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{t("site.title")}</title>
		<meta name="description" content={t("site.description")} />
    <HeadHrefLangs />
	</head>
	<body>
		<LanguageSelector showFlag={true} class="my-select-class" />
		<h1>{t("home.title")}</h1>
    <p>
      <Trans i18nKey="home.subtitle">
        This is a <em>more complex</em> string to translate, mixed with <strong
          >html elements
        </strong> such as <a href="https://example.com/">a cool link</a>!
      </Trans>
    </p>
		<style>
			/* .price {color: red;} */
			h1 {color: brown;}
			.price {color: green; font-weight: bold;}
		</style>
		<ul id="daily-menu"></ul>
	</body>
</html>

<style is:inline>
	#daily-menu li {display:flex; justify-content: space-between;}
	.price {color: green; font-weight: bold;}
</style>

<script>

	const ul = document.querySelector('#daily-menu');
	let dailyMenu = "https://opensheet.elk.sh/1XW32FBLBLWsKdcg6fK6C0PB5-kNJXbGytTWnSNNaSmA/Czech"
	if (document.documentElement.lang === "en") {
		dailyMenu = "https://opensheet.elk.sh/1XW32FBLBLWsKdcg6fK6C0PB5-kNJXbGytTWnSNNaSmA/English"
	}

	await fetch(dailyMenu)
		.then ((res) => res.json())
		.then((data) => {
			data.map(item => {
				let li = document.createElement("li");
				let spanName = document.createElement("span");
				let spanPrice = document.createElement("span");
				let name = document.createTextNode(item.name);
				let price = document.createTextNode(item.price);
				spanName.append(name);
				spanPrice.append(price);
				spanPrice.classList.add("price");
				li.append(spanName, spanPrice);
				ul.appendChild(li);
			})
		})

</script>